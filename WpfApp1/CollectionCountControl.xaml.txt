using System;
using System.Collections;
using System.Reflection;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;

namespace YourNamespace
{
    public partial class CollectionCountControl : UserControl
    {
        public static readonly DependencyProperty CollectionProperty =
            DependencyProperty.Register(
                nameof(Collection),
                typeof(ICollection),
                typeof(CollectionCountControl),
                new PropertyMetadata(null, OnCollectionChanged));

        public static readonly DependencyProperty DisplayNameProperty =
            DependencyProperty.Register(
                nameof(DisplayName),
                typeof(string),
                typeof(CollectionCountControl),
                new PropertyMetadata(string.Empty));

        public ICollection Collection
        {
            get { return (ICollection)GetValue(CollectionProperty); }
            set { SetValue(CollectionProperty, value); }
        }

        public string DisplayName
        {
            get { return (string)GetValue(DisplayNameProperty); }
            set { SetValue(DisplayNameProperty, value); }
        }

        public CollectionCountControl()
        {
            InitializeComponent();
        }

        private static void OnCollectionChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
        {
            var control = d as CollectionCountControl;
            control?.UpdateCollectionDisplay();
        }

        private void UpdateCollectionDisplay()
        {
            if (Collection == null || Collection.Count == 0)
            {
                CollectionDisplay.Content = null;
                return;
            }

            Type itemType = GetItemType(Collection);

            if (IsSimpleType(itemType))
            {
                var listBox = new ListBox();
                listBox.SetBinding(ItemsControl.ItemsSourceProperty, new Binding(nameof(Collection)) { Source = this });
                CollectionDisplay.Content = listBox;
            }
            else
            {
                var dataGrid = new DataGrid();
                dataGrid.AutoGenerateColumns = true;
                dataGrid.SetBinding(ItemsControl.ItemsSourceProperty, new Binding(nameof(Collection)) { Source = this });
                CollectionDisplay.Content = dataGrid;
            }
        }

        private Type GetItemType(ICollection collection)
        {
            foreach (var item in collection)
            {
                return item.GetType();
            }
            return null;
        }

        private bool IsSimpleType(Type type)
        {
            return type != null && (type.IsPrimitive || type == typeof(string) || type == typeof(decimal) || type == typeof(DateTime));
        }
    }
}